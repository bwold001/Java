/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DataMiningGUI;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.event.ActionEvent;
import javax.swing.JFrame;

/**
 *
 * @author VictorCC
 */
public class ImportRecord extends javax.swing.JFrame {

    /**
     * Creates new form JThirdPage
     */
    public ImportRecord() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        ButtonBack = new javax.swing.JButton();
        buttonImport = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Import Patient Record");
        setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        ButtonBack.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ButtonBack.setText("Back");
        ButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackActionPerformed(evt);
            }
        });

        buttonImport.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        buttonImport.setText("Select");
        buttonImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImportActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jTextField1.setText("Enter Patient name...");
        jTextField1.setToolTipText("");
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonImport, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonImport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackActionPerformed
        // TODO add your handling code here:
        JFrame Home = new Home();
        Home.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_ButtonBackActionPerformed
    //public List<String> myList = new ArrayList<>();
    private void buttonImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImportActionPerformed

            // adding the content of the file to CreateEditPatientProfile.java
            Connection conn = JdbcConnection.GetConnection();
            ResultSet SetFromTable = null;
            int PtID = 0;
             CreateEditPatientProfile CreateEditPatientProfile = new CreateEditPatientProfile();
        try {
           String key =  jTextField1.getText();
            Statement m_Statement = conn.createStatement();
          String query = "SELECT * FROM PATIENT WHERE ptname LIKE '%"+key+"%' ";
        ResultSet m_ResultSet = m_Statement.executeQuery(query);

//            while (m_ResultSet.next()) {
//                System.out.println(m_ResultSet.getString(1) + ", " 
//                        + m_ResultSet.getString(2) + ", "
//                        + m_ResultSet.getString(3) + ", " 
//                        + m_ResultSet.getString(4) + ", " 
//                        + m_ResultSet.getString(5)
//                );
//            }
          while (m_ResultSet.next()) {
              CreateEditPatientProfile.txtBoxPatientName.setText(m_ResultSet.getString(1) );
              CreateEditPatientProfile.txtBoxPatientID.setText(m_ResultSet.getString(2) );
              PtID = Integer.parseInt(m_ResultSet.getString(2));
            CreateEditPatientProfile.txtBoxAge.setText(m_ResultSet.getString(3) );
            CreateEditPatientProfile.txtBoxGender.setText(m_ResultSet.getString(4));
            CreateEditPatientProfile.txtBoxWeight.setText(m_ResultSet.getString(5));
            
            }
         
            this.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(ImportRecord.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //MARIE
        
        try {
          Statement m_Statement = conn.createStatement();
        
          String query = "SELECT DRUG.DRUGNAME, EVENT.DRUGDOSAGE, EVENT.EVDRUGSTARTDT, EVENT.DRUGENDDT, EVENT.EVDETAILS FROM EVENT, DRUG, PATIENT "
                  + "WHERE PATIENT.PTID = EVENT.PATIENTID AND DRUG.DRUGID = EVENT.DRUGID AND PATIENTID ="+PtID;
        ResultSet m_ResultSet = m_Statement.executeQuery(query);
        
        

//            while (m_ResultSet.next()) {
//                System.out.println(m_ResultSet.getString(1) + ", " 
//                        + m_ResultSet.getString(2) + ", "
//                        + m_ResultSet.getString(3) + ", " 
//                        + m_ResultSet.getString(4) + ", " 
//                        + m_ResultSet.getString(5)
//                );
//            }
          while (m_ResultSet.next()) {
            CreateEditPatientProfile.tablePatientDrugHistory.setValueAt(m_ResultSet.getString(1),0,0);
            CreateEditPatientProfile.tablePatientDrugHistory.setValueAt(m_ResultSet.getString(2),0,1);
            CreateEditPatientProfile.tablePatientDrugHistory.setValueAt(m_ResultSet.getString(3),0,2);
            CreateEditPatientProfile.tablePatientDrugHistory.setValueAt(m_ResultSet.getString(4),0,3);
            CreateEditPatientProfile.txtAreaPatientHistory.setText(m_ResultSet.getString(5));
            
            
            
            }
            this.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(ImportRecord.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
             CreateEditPatientProfile.setVisible(true);
             
        }
//            CreateEditPatientProfile CreateEditPatientProfile = new CreateEditPatientProfile();
//            List<String> drugList = new ArrayList<>();
//            String[] parts = myList.get(5).split(Pattern.quote("$"));
//            drugList.addAll(Arrays.asList(parts));
//            CreateEditPatientProfile.txtBoxPatientName.setText(myList.get(0));
//            CreateEditPatientProfile.txtBoxAge.setText(myList.get(1));
//            CreateEditPatientProfile.txtBoxGender.setText(myList.get(2));
//            CreateEditPatientProfile.txtBoxWeight.setText(myList.get(3));
//            CreateEditPatientProfile.txtBoxHeight.setText(myList.get(4));
//            for (String drug : drugList) {
//                for (int i = 0; i < 10; i++) {
//                    CreateEditPatientProfile.tablePatientDrugHistory.setValueAt(drug, i, 0);
//                }
//            }
////      CreateEditPatientProfile.tablePatientDrugHistory.setValueAt(drugList.get(0), 0,0);
//            CreateEditPatientProfile.txtAreaPatientHistory.setText(myList.get(7));
//            CreateEditPatientProfile.getValues(myList);
//            CreateEditPatientProfile.setVisible(true);
//            this.setVisible(false);
// 
    }//GEN-LAST:event_buttonImportActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImportRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonBack;
    private javax.swing.JButton buttonImport;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void BrowseButtonActionPerformed(ActionEvent evt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void ImportButtonActionPerformed(ActionEvent evt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
